struct bsem {
    pthread_mutex_t mutex;
    pthread_cond_t cond;
    int v;
};
struct job{
    struct job *prev;                   
    void (*function)(void *arg);       
    void *arg;                          
};
struct jobqueue{
    pthread_mutex_t rwmutex;             
    job *front;                         
    job *rear;                          
    bsem *has_jobs;                      
    int len;                           
};
struct thread{
    int id;                        
    pthread_t pthread;                   
    struct thpool_ *thpool_p;            
};
struct thpool_{
    thread **threads;                  
    volatile int num_threads_alive;      
    volatile int num_threads_working;    
    pthread_mutex_t thcount_lock;       
    pthread_cond_t threads_all_idle;    
    jobqueue jobqueue;                  
};
struct HASH_TABLE_S {
    unsigned long long ulSize; 
    unsigned long long (*pfHash)(const void *); 
    HASH_LIST_S *pstBckt; 
};
typedef DL_HEAD_S HASH_LIST_S;
struct tagDL_NODE {
    struct tagDL_NODE *pstNext; 
    struct tagDL_NODE **ppstPre; 
};
typedef bsem bsem; 
typedef job job; 
typedef jobqueue jobqueue; 
typedef thread thread; 
typedef thpool_ thpool_; 
typedef HASH_TABLE_S HASH_TABLE_S; 
typedef tagDL_NODE DL_HEAD_S; 
